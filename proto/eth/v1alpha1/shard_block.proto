syntax = "proto3";
package ethereum.eth.v1alpha1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "github.com/prysmaticlabs/prysm/proto/eth/v1alpha1;eth";

// The Ethereum 2.0 shard block.
message ShardBlock {
    uint64 shard = 1;
    uint64 slot = 2;
    bytes beacon_block_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
    bytes parent_root = 4[(gogoproto.moretags) = "ssz-size:\"32\""];
    bytes state_root = 5 [(gogoproto.moretags) = "ssz-size:\"32\""];
    uint64 block_size_sum = 6;
    repeated bytes body = 7 [(gogoproto.moretags) = "ssz-max:\"65024\""];
    bytes aggregation_bits = 8 [(gogoproto.moretags) = "ssz-max:\"256\"", (gogoproto.casttype) = "github.com/prysmaticlabs/go-bitfield.Bitlist"];
    bytes attestations_signature = 9 [(gogoproto.moretags) = "ssz-size:\"96\""];
    bytes signature = 10 [(gogoproto.moretags) = "ssz-size:\"96\""];
}

// The Ethereum 2.0 shard block header.
message ShardBlockHeader {
    uint64 shard = 1;
    uint64 slot = 2;
    bytes beacon_block_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
    bytes parent_root = 4[(gogoproto.moretags) = "ssz-size:\"32\""];
    bytes state_root = 5 [(gogoproto.moretags) = "ssz-size:\"32\""];
    uint64 block_size_sum = 6;
    bytes body_root = 7 [(gogoproto.moretags) = "ssz-size:\"32\""];
    bytes aggregation_bits = 8 [(gogoproto.moretags) = "ssz-max:\"256\"", (gogoproto.casttype) = "github.com/prysmaticlabs/go-bitfield.Bitlist"];
    bytes attestations_signature = 9 [(gogoproto.moretags) = "ssz-size:\"96\""];
    bytes signature = 10 [(gogoproto.moretags) = "ssz-size:\"96\""];
}

message ShardState {
    // The shard of the current state.
    uint64 shard = 1;
    // The slot of the current state.
    uint64 slot = 2;
    // The history accumulator of the current state.
    repeated bytes history_accumulator = 3 [(gogoproto.moretags) = "ssz-size:\"32,64\""];
    // The last shard block header.
    ShardBlockHeader latest_block_header = 4;
    // The last block size total.
    uint64 block_size_sum = 5;
    // Fee and rewards
    uint64 block_size_price = 6;
    repeated uint64 older_committee_deltas = 7 [(gogoproto.moretags) = "ssz-max:\"128\""];
    repeated uint64 newer_committee_deltas = 8 [(gogoproto.moretags) = "ssz-max:\"128\""];
}

message ShardCheckpoint {
    // The slot of the check point.
    uint64 slot = 1;
    // 32 byte root of the shard block's parent root that links to this check point.
    bytes parent_root = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
}
